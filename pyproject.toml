[project]
# PEP 621 project metadata
# See https://www.python.org/dev/peps/pep-0621/
dependencies = [
    "numpy>=1.24.2",
    "wandb>=0.13.10",
    "matplotlib>=3.7.0",
    "scipy>=1.10.0",
    "pytorch-lightning>=2.0.3",
    "shapely>=2.0.1",
    "networkx>=3.0",
    "Cartopy>=0.22.0",
    "pyproj>=3.4.1",
    "tueplots>=0.0.8",
    "plotly>=5.15.0",
    "pre-commit>=2.15.0",
]
requires-python = ">=3.10"
name = "neural-lam"
version = "0.1.0"
description = "Neural Weather Prediction for Limited Area Modeling"
authors = [
    {name = "Joel Oskarsson", email = "joel.oskarsson@liu.se"},
    {name = "Simon Adamov", email = "simon.adamov@meteoswiss.ch"},
    {name = "Leif Denby", email = "lcd@dmi.dk"},
]
readme = "README.md"
license = {text = "MIT"}

[tool.black]
line-length = 80

[tool.isort]
profile = "black"

[tool.flake8]
max-line-length = 80
ignore = [
    "E203", # Allow whitespace before ':' (https://github.com/PyCQA/pycodestyle/issues/373)
    "I002", # Don't check for isort configuration
    "W503", # Allow line break before binary operator (PEP 8-compatible)
]
per-file-ignores = [
    "__init__.py: F401", # Allow unused imports
]

[tool.codespell]
skip = "requirements/*"

# Pylint config
[tool.pylint]
ignore = [
    "create_mesh.py", # Disable linting for now, as major rework is planned/expected
]
# Temporary fix for import neural_lam statements until set up as proper package
init-hook='import sys; sys.path.append(".")'
[tool.pylint.TYPECHECK]
generated-members = [
    "numpy.*",
    "torch.*",
]
[tool.pylint.'MESSAGES CONTROL']
disable = [
    "C0114", # 'missing-module-docstring', Do not require module docstrings
    "R0901", # 'too-many-ancestors', Allow many layers of sub-classing
    "R0902", # 'too-many-instance-attribtes', Allow many attributes
    "R0913", # 'too-many-arguments', Allow many function arguments
    "R0914", # 'too-many-locals', Allow many local variables
    "W0223", # 'abstract-method', Subclasses do not have to override all abstract methods
]
[tool.pylint.DESIGN]
max-statements=100 # Allow for some more involved functions
[tool.pylint.IMPORTS]
allow-any-import-level="neural_lam"
[tool.pylint.SIMILARITIES]
min-similarity-lines=10


[tool.pdm]
distribution = true
[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"
